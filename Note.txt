机器人只有宽边能带球和踢球。
3v3过渡带球犯规还没有写。

大模型：SSL3v3Env
    输入：42维obs
    输出：42维obs+任务编号

小模型（输出：5维动作）：

任务0：SSLShootEnv
    说明：控球情况下，使用dribbler+kicker射门。根据规则，带球时间/距离存在上限。
    输入：42维obs
    reward：球距离球门中点的距离，球滚动方向，能量惩罚
    起始状态：6个机器人随机分布，active player控球，其余5个做随机运动
    终止条件：进球+，犯规-，失去控球权（球接触到其他敌方球员）-，时间到达上限
任务1：SSLPassEnv
    说明：控球情况下，使用dribbler+kicker将球传给最近队友。根据规则，带球时间/距离存在上限。
    输入：42维obs
    reward：球距离队友位置的距离，球滚动方向，能量惩罚
    起始状态：6个机器人随机分布，active player控球，其余5个做随机运动
    终止条件：犯规，球到达目标位置，对方获得控球权，时间到达上限
任务2：SSLCatchEnv
    说明：非控球情况下，接近一个自由的球并进入控球状态。
    输入：42维obs
任务3：SSLInterceptEnv
    说明：非控球情况下，从敌人控制下夺取控球权，并进入控球状态。
    输入：42维obs
======================================
ssh访问远程tensorboard

本机运行：
ssh -L 16006:127.0.0.1:6006 zzydty@172.29.244.218 -N -v -v

远端运行：
nohup tensorboard --logdir=./ --port=6006 --samples_per_plugin scalars=999999999

本地浏览器访问：
http://localhost:16006

如果要重新运行，可以用以下指令杀死6006端口上的进程：
fuser -k 6006/tcp

========================================
Nohup：在ssh断开的情况下也能跑程序
删除上次的记录：
rm nohup.out

用nohup 运行一个python文件
nohup python3 -u train.py > nohup.out 2>&1 &

然后输入以下命令，这样程序就不会被终端影响，可以在后台运行，并且不会被杀死
disown

想要实时看到输出结果就再写一行代码
tail -fn 50 nohup.out

查看后台进程的PID：
ps

如果关闭了命令行，可以这样查看进程编号（第二列）：
ps aux | grep "train.py"

终止进程：
kill -9 PID

==================================